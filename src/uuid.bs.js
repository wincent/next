// Generated by BUCKLESCRIPT VERSION 2.2.2, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Int32 = require("bs-platform/lib/js/int32.js");
var Random = require("bs-platform/lib/js/random.js");
var $$String = require("bs-platform/lib/js/string.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Util$ReactTemplate = require("./util.bs.js");

var digits = /* array */[
  "0",
  "1",
  "2",
  "3",
  "4",
  "5",
  "6",
  "7",
  "8",
  "9",
  "a",
  "b",
  "c",
  "d",
  "e",
  "f"
];

function to_hex(a) {
  var nibbles = List.map((function (i) {
          return Caml_array.caml_array_get(digits, (a >>> (i << 2)) & 15);
        }), List.rev(Util$ReactTemplate.range(0, 7)));
  return Util$ReactTemplate.join(nibbles, "");
}

Random.self_init(/* () */0);

function getUUID() {
  var timestamp = $$Array.init(4, (function () {
          return Random.int32(Int32.max_int);
        }));
  var masked = Caml_array.caml_array_get(timestamp, 1) & -61441;
  var version = 16384;
  Caml_array.caml_array_set(timestamp, 1, masked | version);
  var masked$1 = Caml_array.caml_array_get(timestamp, 2) & 1073741823;
  var variant = -2147483648;
  Caml_array.caml_array_set(timestamp, 2, masked$1 | variant);
  var uuid = Util$ReactTemplate.join(List.map(to_hex, $$Array.to_list(timestamp)), "");
  return $$String.sub(uuid, 0, 8) + ("-" + ($$String.sub(uuid, 8, 4) + ("-" + ($$String.sub(uuid, 12, 4) + ("-" + ($$String.sub(uuid, 16, 4) + ("-" + $$String.sub(uuid, 20, 12))))))));
}

exports.getUUID = getUUID;
/*  Not a pure module */
